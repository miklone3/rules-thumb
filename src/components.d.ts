/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppFooter {
    }
    interface AppHeader {
    }
    interface AppHome {
    }
    interface AppHowWorks {
    }
    interface AppPastTrials {
    }
    interface AppRoot {
    }
    interface AppTerms {
    }
    interface BlurBox {
    }
    interface PageNotFound {
    }
    interface SectionScreen {
        "background": string;
    }
    interface SectionToast {
    }
    interface ThumbBanner {
    }
    interface ThumbBox {
        "data": any;
        "tiny": boolean;
    }
    interface ThumbBoxVotes {
        "data": {
            thumbUp: number;
            thumbDown: number;
        };
    }
    interface ThumbMain {
        "data": any;
    }
}
declare global {
    interface HTMLAppFooterElement extends Components.AppFooter, HTMLStencilElement {
    }
    var HTMLAppFooterElement: {
        prototype: HTMLAppFooterElement;
        new (): HTMLAppFooterElement;
    };
    interface HTMLAppHeaderElement extends Components.AppHeader, HTMLStencilElement {
    }
    var HTMLAppHeaderElement: {
        prototype: HTMLAppHeaderElement;
        new (): HTMLAppHeaderElement;
    };
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppHowWorksElement extends Components.AppHowWorks, HTMLStencilElement {
    }
    var HTMLAppHowWorksElement: {
        prototype: HTMLAppHowWorksElement;
        new (): HTMLAppHowWorksElement;
    };
    interface HTMLAppPastTrialsElement extends Components.AppPastTrials, HTMLStencilElement {
    }
    var HTMLAppPastTrialsElement: {
        prototype: HTMLAppPastTrialsElement;
        new (): HTMLAppPastTrialsElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAppTermsElement extends Components.AppTerms, HTMLStencilElement {
    }
    var HTMLAppTermsElement: {
        prototype: HTMLAppTermsElement;
        new (): HTMLAppTermsElement;
    };
    interface HTMLBlurBoxElement extends Components.BlurBox, HTMLStencilElement {
    }
    var HTMLBlurBoxElement: {
        prototype: HTMLBlurBoxElement;
        new (): HTMLBlurBoxElement;
    };
    interface HTMLPageNotFoundElement extends Components.PageNotFound, HTMLStencilElement {
    }
    var HTMLPageNotFoundElement: {
        prototype: HTMLPageNotFoundElement;
        new (): HTMLPageNotFoundElement;
    };
    interface HTMLSectionScreenElement extends Components.SectionScreen, HTMLStencilElement {
    }
    var HTMLSectionScreenElement: {
        prototype: HTMLSectionScreenElement;
        new (): HTMLSectionScreenElement;
    };
    interface HTMLSectionToastElement extends Components.SectionToast, HTMLStencilElement {
    }
    var HTMLSectionToastElement: {
        prototype: HTMLSectionToastElement;
        new (): HTMLSectionToastElement;
    };
    interface HTMLThumbBannerElement extends Components.ThumbBanner, HTMLStencilElement {
    }
    var HTMLThumbBannerElement: {
        prototype: HTMLThumbBannerElement;
        new (): HTMLThumbBannerElement;
    };
    interface HTMLThumbBoxElement extends Components.ThumbBox, HTMLStencilElement {
    }
    var HTMLThumbBoxElement: {
        prototype: HTMLThumbBoxElement;
        new (): HTMLThumbBoxElement;
    };
    interface HTMLThumbBoxVotesElement extends Components.ThumbBoxVotes, HTMLStencilElement {
    }
    var HTMLThumbBoxVotesElement: {
        prototype: HTMLThumbBoxVotesElement;
        new (): HTMLThumbBoxVotesElement;
    };
    interface HTMLThumbMainElement extends Components.ThumbMain, HTMLStencilElement {
    }
    var HTMLThumbMainElement: {
        prototype: HTMLThumbMainElement;
        new (): HTMLThumbMainElement;
    };
    interface HTMLElementTagNameMap {
        "app-footer": HTMLAppFooterElement;
        "app-header": HTMLAppHeaderElement;
        "app-home": HTMLAppHomeElement;
        "app-how-works": HTMLAppHowWorksElement;
        "app-past-trials": HTMLAppPastTrialsElement;
        "app-root": HTMLAppRootElement;
        "app-terms": HTMLAppTermsElement;
        "blur-box": HTMLBlurBoxElement;
        "page-not-found": HTMLPageNotFoundElement;
        "section-screen": HTMLSectionScreenElement;
        "section-toast": HTMLSectionToastElement;
        "thumb-banner": HTMLThumbBannerElement;
        "thumb-box": HTMLThumbBoxElement;
        "thumb-box-votes": HTMLThumbBoxVotesElement;
        "thumb-main": HTMLThumbMainElement;
    }
}
declare namespace LocalJSX {
    interface AppFooter {
    }
    interface AppHeader {
    }
    interface AppHome {
    }
    interface AppHowWorks {
    }
    interface AppPastTrials {
    }
    interface AppRoot {
    }
    interface AppTerms {
    }
    interface BlurBox {
    }
    interface PageNotFound {
    }
    interface SectionScreen {
        "background"?: string;
    }
    interface SectionToast {
    }
    interface ThumbBanner {
    }
    interface ThumbBox {
        "data"?: any;
        "onON_DATA_CHANGE"?: (event: CustomEvent<any>) => void;
        "tiny"?: boolean;
    }
    interface ThumbBoxVotes {
        "data"?: {
            thumbUp: number;
            thumbDown: number;
        };
    }
    interface ThumbMain {
        "data"?: any;
    }
    interface IntrinsicElements {
        "app-footer": AppFooter;
        "app-header": AppHeader;
        "app-home": AppHome;
        "app-how-works": AppHowWorks;
        "app-past-trials": AppPastTrials;
        "app-root": AppRoot;
        "app-terms": AppTerms;
        "blur-box": BlurBox;
        "page-not-found": PageNotFound;
        "section-screen": SectionScreen;
        "section-toast": SectionToast;
        "thumb-banner": ThumbBanner;
        "thumb-box": ThumbBox;
        "thumb-box-votes": ThumbBoxVotes;
        "thumb-main": ThumbMain;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-footer": LocalJSX.AppFooter & JSXBase.HTMLAttributes<HTMLAppFooterElement>;
            "app-header": LocalJSX.AppHeader & JSXBase.HTMLAttributes<HTMLAppHeaderElement>;
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-how-works": LocalJSX.AppHowWorks & JSXBase.HTMLAttributes<HTMLAppHowWorksElement>;
            "app-past-trials": LocalJSX.AppPastTrials & JSXBase.HTMLAttributes<HTMLAppPastTrialsElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "app-terms": LocalJSX.AppTerms & JSXBase.HTMLAttributes<HTMLAppTermsElement>;
            "blur-box": LocalJSX.BlurBox & JSXBase.HTMLAttributes<HTMLBlurBoxElement>;
            "page-not-found": LocalJSX.PageNotFound & JSXBase.HTMLAttributes<HTMLPageNotFoundElement>;
            "section-screen": LocalJSX.SectionScreen & JSXBase.HTMLAttributes<HTMLSectionScreenElement>;
            "section-toast": LocalJSX.SectionToast & JSXBase.HTMLAttributes<HTMLSectionToastElement>;
            "thumb-banner": LocalJSX.ThumbBanner & JSXBase.HTMLAttributes<HTMLThumbBannerElement>;
            "thumb-box": LocalJSX.ThumbBox & JSXBase.HTMLAttributes<HTMLThumbBoxElement>;
            "thumb-box-votes": LocalJSX.ThumbBoxVotes & JSXBase.HTMLAttributes<HTMLThumbBoxVotesElement>;
            "thumb-main": LocalJSX.ThumbMain & JSXBase.HTMLAttributes<HTMLThumbMainElement>;
        }
    }
}
